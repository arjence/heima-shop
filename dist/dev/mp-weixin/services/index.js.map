{"version":3,"file":"index.js","sources":["../../../../src/services/index.ts"],"sourcesContent":["import { useMemberStore } from '@/stores'\n\ninterface Data<T> {\n  code: string\n  msg: string\n  result: T\n}\n\nclass Http {\n  // baseURL: String = ''\n  // constructor(baseURL: String) {\n  //   this.baseURL = baseURL\n  // }\n  constructor() {}\n\n  request<T>(options: UniApp.RequestOptions) {\n    // //拼接url\n    // options.url = this.baseURL + options.url\n    // //请求超时时间\n    // options.timeout = 10000\n    // options.header = {\n    //   ...options.header,\n    //   'source-client': 'miniapp',\n    // }\n    // //设置token\n    // const { profile } = useMemberStore()\n    // const token = profile?.token\n    // if (token) {\n    //   options.header.Authorization = token\n    // }\n    return new Promise<Data<T>>((resolve, reject) => {\n      uni.request({\n        ...options,\n        success(res) {\n          if (res.statusCode >= 200 && res.statusCode < 300) {\n            resolve(res.data as Data<T>)\n          } else if (res.statusCode === 401) {\n            const store = useMemberStore()\n            store.clearProfile()\n            uni.navigateTo({\n              url: '/pages/login/login',\n            })\n          } else {\n            uni.showToast({\n              icon: 'none',\n              title: (res.data as Data<T>).msg || '数据获取失败',\n            })\n            reject(res)\n          }\n        },\n        fail: (err: any) => {\n          uni.showToast({\n            icon: 'none',\n            title: '网络错误，请切换网路！',\n          })\n          reject(err)\n        },\n      })\n    })\n  }\n\n  get<T = any>(options: any) {\n    return this.request<T>({ ...options, method: 'GET' })\n  }\n\n  post<T = any>(options: any) {\n    return this.request<T>({ ...options, method: 'POST' })\n  }\n\n  put<T = any>(options: any) {\n    return this.request<T>({ ...options, method: 'PUT' })\n  }\n\n  delete<T = any>(options: any) {\n    return this.request<T>({ ...options, method: 'DELETE' })\n  }\n}\nconst baseURL = 'https://pcapi-xiaotuxian-front-devtest.itheima.net'\n// 拦截器配置\nconst httpInterceptor = {\n  // 拦截前触发\n  invoke(options: UniApp.RequestOptions) {\n    // 1. 非 http 开头需拼接地址\n    if (!options.url.startsWith('http')) {\n      options.url = baseURL + options.url\n    }\n    // 2. 请求超时\n    options.timeout = 10000\n    // 3. 添加小程序端请求头标识\n    options.header = {\n      'source-client': 'miniapp',\n      ...options.header,\n    }\n    // 4. 添加 token 请求头标识\n    const memberStore = useMemberStore()\n    const token = memberStore.profile?.token\n    if (token) {\n      options.header.Authorization = token\n    }\n  },\n}\n\n// 拦截 request 请求\nuni.addInterceptor('request', httpInterceptor)\n// 拦截 uploadFile 文件上传\nuni.addInterceptor('uploadFile', httpInterceptor)\n\nexport const http = new Http()\n"],"names":["uni","useMemberStore"],"mappings":";;;;AAQA,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,EAKT,cAAc;AAAA,EAAC;AAAA,EAEf,QAAW,SAAgC;AAezC,WAAO,IAAI,QAAiB,CAAC,SAAS,WAAW;AAC/CA,oBAAAA,MAAI,QAAQ;AAAA,QACV,GAAG;AAAA,QACH,QAAQ,KAAK;AACX,cAAI,IAAI,cAAc,OAAO,IAAI,aAAa,KAAK;AACjD,oBAAQ,IAAI,IAAe;AAAA,UAAA,WAClB,IAAI,eAAe,KAAK;AACjC,kBAAM,QAAQC,sBAAAA;AACd,kBAAM,aAAa;AACnBD,0BAAAA,MAAI,WAAW;AAAA,cACb,KAAK;AAAA,YAAA,CACN;AAAA,UAAA,OACI;AACLA,0BAAAA,MAAI,UAAU;AAAA,cACZ,MAAM;AAAA,cACN,OAAQ,IAAI,KAAiB,OAAO;AAAA,YAAA,CACrC;AACD,mBAAO,GAAG;AAAA,UACZ;AAAA,QACF;AAAA,QACA,MAAM,CAAC,QAAa;AAClBA,wBAAAA,MAAI,UAAU;AAAA,YACZ,MAAM;AAAA,YACN,OAAO;AAAA,UAAA,CACR;AACD,iBAAO,GAAG;AAAA,QACZ;AAAA,MAAA,CACD;AAAA,IAAA,CACF;AAAA,EACH;AAAA,EAEA,IAAa,SAAc;AACzB,WAAO,KAAK,QAAW,EAAE,GAAG,SAAS,QAAQ,OAAO;AAAA,EACtD;AAAA,EAEA,KAAc,SAAc;AAC1B,WAAO,KAAK,QAAW,EAAE,GAAG,SAAS,QAAQ,QAAQ;AAAA,EACvD;AAAA,EAEA,IAAa,SAAc;AACzB,WAAO,KAAK,QAAW,EAAE,GAAG,SAAS,QAAQ,OAAO;AAAA,EACtD;AAAA,EAEA,OAAgB,SAAc;AAC5B,WAAO,KAAK,QAAW,EAAE,GAAG,SAAS,QAAQ,UAAU;AAAA,EACzD;AACF;AACA,MAAM,UAAU;AAEhB,MAAM,kBAAkB;AAAA;AAAA,EAEtB,OAAO,SAAgC;;AAErC,QAAI,CAAC,QAAQ,IAAI,WAAW,MAAM,GAAG;AAC3B,cAAA,MAAM,UAAU,QAAQ;AAAA,IAClC;AAEA,YAAQ,UAAU;AAElB,YAAQ,SAAS;AAAA,MACf,iBAAiB;AAAA,MACjB,GAAG,QAAQ;AAAA,IAAA;AAGb,UAAM,cAAcC,sBAAAA;AACd,UAAA,SAAQ,iBAAY,YAAZ,mBAAqB;AACnC,QAAI,OAAO;AACT,cAAQ,OAAO,gBAAgB;AAAA,IACjC;AAAA,EACF;AACF;AAGAD,cAAAA,MAAI,eAAe,WAAW,eAAe;AAE7CA,cAAAA,MAAI,eAAe,cAAc,eAAe;AAEnC,MAAA,OAAO,IAAI,KAAK;;"}